// src/app/cart/page.tsx
"use client";

import React, { useState } from 'react';
import { useCart } from '@/context/CartContext';
import Image from 'next/image';
import Link from 'next/link';
import { Trash2, Plus, Minus, CheckCircle } from 'lucide-react'; // Added CheckCircle icon
import { motion, AnimatePresence } from 'framer-motion'; // For smooth motion and removal

const CartPage = () => {
  const { cartItems, removeFromCart, updateQuantity, getCartTotal, clearCart, getItemCount } = useCart();
  const [orderPlaced, setOrderPlaced] = useState(false);
  const [homeDelivery, setHomeDelivery] = useState(true); 

  const totalItems = getItemCount();
  const cartTotal = getCartTotal();

  const handlePlaceOrder = () => {
    // Simulate placing order
    console.log("Order placed with Pay on Delivery. Delivery Method:", homeDelivery ? "Home Delivery" : "Store Pickup");
    setOrderPlaced(true);
    clearCart(); // Clear the cart after placing the order
  };

  // --- Animation Variants for Cart Items ---
  const itemVariants = {
    initial: { opacity: 0, x: -20, scale: 0.95 },
    animate: { opacity: 1, x: 0, scale: 1 },
    exit: { opacity: 0, x: 50, transition: { duration: 0.3 } }
  };
  
  // If order is placed, show confirmation message
  if (orderPlaced) {
    return (
      <div className="container mx-auto px-4 py-20 text-center flex-grow">
        <motion.div
          initial={{ opacity: 0, y: -50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ type: "spring", stiffness: 100 }}
          className="bg-white p-10 rounded-xl shadow-2xl max-w-lg mx-auto border-t-4 border-secondary-color"
        >
          <CheckCircle className="h-16 w-16 text-secondary-color mx-auto mb-6" />
          <h1 className="text-3xl font-bold text-primary-color mb-3">Order Placed Successfully!</h1>
          <p className="text-lg text-gray-700 mb-4">Thank you for your purchase. Your order will be processed shortly.</p>
          <p className="text-md text-gray-600 mb-8 font-medium">Payment Method: Pay on Delivery</p>
          <Link href="/">
            <button className="bg-primary-color text-white py-2 px-6 rounded-lg hover:bg-secondary-color transition-colors font-semibold">
              Continue Shopping
            </button>
          </Link>
        </motion.div>
      </div>
    );
  }

  // If cart is empty
  if (cartItems.length === 0) {
    return (
      <div className="container mx-auto px-4 py-16 text-center">
        <h1 className="text-3xl font-bold text-primary-color mb-4">Your Shopping Cart is Empty</h1>
        <p className="text-lg text-gray-700 mb-8">It looks like you haven't added any products yet.</p>
        <Link href="/">
          <button className="bg-secondary-color text-white py-3 px-8 rounded-lg hover:bg-primary-color transition-colors font-semibold">
            Start Shopping Now
          </button>
        </Link>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-10 sm:py-16">
      <h1 className="text-4xl font-extrabold text-primary-color mb-10 border-b-2 border-secondary-color pb-2 inline-block">
        Your Shopping Cart ({totalItems} Items)
      </h1>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-10">
        {/* Cart Items List (2/3 width) */}
        <div className="lg:col-span-2 space-y-6">
          <AnimatePresence>
            {cartItems.map((item) => (
              <motion.div
                key={item.id}
                variants={itemVariants}
                initial="initial"
                animate="animate"
                exit="exit"
                className="flex items-center bg-white p-4 sm:p-6 rounded-xl shadow-lg border border-gray-100 transition-shadow duration-300"
              >
                <Link href={`/products/${item.id}`} className="flex-shrink-0 w-20 h-20 sm:w-24 sm:h-24 relative rounded-md overflow-hidden mr-4 sm:mr-6">
                  <Image
                    src={item.imageUrl}
                    alt={item.title}
                    fill
                    style={{ objectFit: 'cover' }}
                    sizes="100px"
                  />
                </Link>

                {/* Item Details */}
                <div className="flex-grow">
                  <h2 className="text-lg font-semibold text-text-color hover:text-secondary-color transition-colors">
                    <Link href={`/products/${item.id}`}>{item.title}</Link>
                  </h2>
                  <p className="text-sm text-gray-500">{item.category}</p>
                  <p className="text-lg font-bold text-primary-color mt-1">${item.price.toFixed(2)}</p>
                </div>

                {/* Quantity Controls */}
                <div className="flex items-center space-x-2 mx-4">
                  <motion.button
                    onClick={() => updateQuantity(item.id, item.quantity - 1)}
                    whileTap={{ scale: 0.9 }}
                    className="p-2 border border-gray-300 rounded-lg text-primary-color hover:bg-gray-100 transition-colors"
                  >
                    <Minus size={16} />
                  </motion.button>
                  <span className="text-lg font-medium w-6 text-center">{item.quantity}</span>
                  <motion.button
                    onClick={() => updateQuantity(item.id, item.quantity + 1)}
                    whileTap={{ scale: 0.9 }}
                    className="p-2 border border-gray-300 rounded-lg text-primary-color hover:bg-gray-100 transition-colors"
                  >
                    <Plus size={16} />
                  </motion.button>
                </div>
                
                {/* Item Total & Remove Button */}
                <div className="text-right flex-shrink-0 ml-4">
                  <p className="text-xl font-extrabold text-secondary-color">
                    ${(item.price * item.quantity).toFixed(2)}
                  </p>
                  <motion.button
                    onClick={() => removeFromCart(item.id)}
                    whileTap={{ scale: 0.9 }}
                    className="text-gray-400 hover:text-red-500 mt-1 transition-colors flex items-center space-x-1 text-sm"
                  >
                    <Trash2 size={16} />
                    <span className="hidden sm:inline">Remove</span>
                  </motion.button>
                </div>
              </motion.div>
            ))}
          </AnimatePresence>
          
          <button 
            onClick={clearCart}
            className="text-red-500 hover:text-red-600 transition-colors mt-4 font-medium flex items-center space-x-2"
          >
            <Trash2 size={18} />
            <span>Clear Entire Cart</span>
          </button>
        </div>

        {/* Order Summary (1/3 width) */}
        <div className="lg:col-span-1">
          <div className="bg-gray-50 p-6 rounded-xl shadow-xl sticky top-24 border border-gray-200">
            <h2 className="text-2xl font-bold text-primary-color mb-6 border-b pb-3">Order Summary</h2>

            <div className="space-y-3 mb-6">
              <div className="flex justify-between text-gray-700">
                <span>Subtotal ({totalItems} items)</span>
                <span>${cartTotal.toFixed(2)}</span>
              </div>
              <div className="flex justify-between text-gray-600">
                <span>Shipping</span>
                <span className="text-green-600 font-semibold">FREE</span> 
              </div>
            </div>

            <div className="flex justify-between font-extrabold text-2xl text-primary-color mb-8 pt-4 border-t border-secondary-color">
              <span>Order Total</span>
              <span>${cartTotal.toFixed(2)}</span>
            </div>

            {/* Delivery Option */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-gray-700 mb-2">Delivery Option</label>
              <select
                value={homeDelivery ? 'home' : 'pickup'}
                onChange={(e) => setHomeDelivery(e.target.value === 'home')}
                className="w-full p-3 border border-gray-300 rounded-lg bg-white text-gray-800 focus:ring-secondary-color focus:border-secondary-color transition-shadow"
              >
                <option value="home">Home Delivery (Recommended)</option>
                 {/* <option value="pickup">Store Pickup</option> */}
              </select>
            </div>

            {/* Pay on Delivery Button - Styled with Gold/Secondary Color */}
            <motion.button
              onClick={handlePlaceOrder}
              whileTap={{ scale: 0.98 }}
              className="w-full bg-secondary-color text-white py-3 rounded-lg hover:bg-primary-color transition-colors font-semibold shadow-md"
            >
              Place Order (Pay on Delivery)
            </motion.button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CartPage;
